name: CI General Assignment
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # загружаем реп. на виртуальную машину
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4 # установка SDK для сборки, тестирования проекта
        with:
          dotnet-version: '6.0.x'

      - name: Restore NuGet
        run: dotnet restore WpfApp.sln # восстановление пакетов nuget

      - name: Build app
        run: dotnet build WpfApp/WpfApp.csproj # собираем приложение

  testing-combined:  
    runs-on: windows-latest
    needs: build # выполняется последовательно после успешного выполнения build
    strategy:
      matrix:
        configuration: [Debug, Release] # тестируем приложение сначала как Debug, а потом Release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # загружаем реп. на виртуальную машину
      - name: Setup .NET
        uses: actions/setup-dotnet@v4 # установка SDK для сборки, тестирования проекта
        with:
          dotnet-version: '6.0.x'

      - name: Restore NuGet
        run: dotnet restore WpfApp.sln # восстановление пакетов nuget

      - name: Test app
        run: dotnet test UnitTestProject1/UnitTestProject1.csproj --configuration ${{ matrix.configuration }} # тестируем приложение

      - run: echo "Тестирование прошло успешно!"

  analysis:  
    runs-on: ubuntu-latest
    #needs: build # выполняется последовательно после успешного выполнения build, но параллельно с testing-combined
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # загружаем реп. на виртуальную машину
      - name: Inspect
        uses: nbadal/inspectcode-action
        with:
          solution: WpfApp.sln

      - run: echo "Анализ кода прошёл успешно!"
